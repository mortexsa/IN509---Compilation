Non-terminaux inutiles dans la grammaire

   decl
   varDecl
   funcDecl
   params
   nonemptyparams
   decls
   param
   typeannotation
   ifExpr


Terminaux inutilisés dans la grammaire

   ":"
   ";"
   "{"
   "}"
   "+"
   "|"
   "let"
   "in"
   "end"
   "function"
   "var"
   TYPE
   THEN
   OF


Règles inutiles dans la grammaire

   34 decl: varDecl
   35     | funcDecl

   36 varDecl: "var" "id" typeannotation ":=" expr

   37 funcDecl: "function" "id" "(" params ")" typeannotation "=" expr

   38 params: %empty
   39       | nonemptyparams

   40 nonemptyparams: param
   41               | nonemptyparams "," param

   42 decls: %empty
   43      | decls decl

   44 param: "id" ":" "id"

   45 typeannotation: %empty
   46               | ":" "id"


État 20 conflits: 2 décalage/réduction
État 40 conflits: 2 décalage/réduction
État 41 conflits: 9 décalage/réduction
État 42 conflits: 9 décalage/réduction
État 43 conflits: 2 décalage/réduction
État 44 conflits: 2 décalage/réduction
État 45 conflits: 2 décalage/réduction
État 46 conflits: 2 décalage/réduction
État 47 conflits: 2 décalage/réduction
État 48 conflits: 2 décalage/réduction
État 49 conflits: 2 décalage/réduction
État 50 conflits: 2 décalage/réduction
État 58 conflits: 2 décalage/réduction


Grammaire

    0 $accept: program "end of file"

    1 program: expr

    2 expr: stringExpr
    3     | intExpr
    4     | var
    5     | callExpr
    6     | opExpr
    7     | negExpr
    8     | assignExpr
    9     | whileExpr
   10     | forExpr
   11     | breakExpr

   12 stringExpr: "string"

   13 var: "id"

   14 intExpr: "int"

   15 callExpr: "id" "(" arguments ")"

   16 negExpr: "-" expr

   17 opExpr: expr "*" expr
   18       | expr "/" expr
   19       | expr "=" expr
   20       | expr "<>" expr
   21       | expr "<" expr
   22       | expr ">" expr
   23       | expr "<=" expr
   24       | expr ">=" expr
   25       | expr "&" expr

   26 assignExpr: "id" ":=" expr

   27 whileExpr: "while" expr "do" expr

   28 forExpr: "for" "id" ":=" expr "to" expr "do" expr

   29 breakExpr: "break"

   30 arguments: %empty
   31          | nonemptyarguments

   32 nonemptyarguments: expr
   33                  | nonemptyarguments "," expr


Terminaux, suivis des règles où ils apparaissent

"end of file" (0) 0
error (256)
"," (258) 33
":" (259)
";" (260)
"(" (261) 15
")" (262) 15
"{" (263)
"}" (264)
"+" (265)
"-" (266) 16
"*" (267) 17
"/" (268) 18
"=" (269) 19
"<>" (270) 20
"<" (271) 21
"<=" (272) 23
">" (273) 22
">=" (274) 24
"&" (275) 25
"|" (276)
":=" (277) 26 28
"while" (278) 27
"for" (279) 28
"to" (280) 28
"do" (281) 27 28
"let" (282)
"in" (283)
"end" (284)
"break" (285) 29
"function" (286)
"var" (287)
"uminus" (288)
"id" (289) 13 15 26 28
"string" (290) 12
"int" (291) 14
TYPE (292)
THEN (293)
OF (294)


Non-terminaux, suivis des règles où ils apparaissent

$accept (40)
    à gauche: 0
program (41)
    à gauche: 1, à droite: 0
expr (42)
    à gauche: 2 3 4 5 6 7 8 9 10 11, à droite: 1 16 17 18 19 20 21
    22 23 24 25 26 27 28 32 33
stringExpr (43)
    à gauche: 12, à droite: 2
var (44)
    à gauche: 13, à droite: 4
intExpr (45)
    à gauche: 14, à droite: 3
callExpr (46)
    à gauche: 15, à droite: 5
negExpr (47)
    à gauche: 16, à droite: 7
opExpr (48)
    à gauche: 17 18 19 20 21 22 23 24 25, à droite: 6
assignExpr (49)
    à gauche: 26, à droite: 8
whileExpr (50)
    à gauche: 27, à droite: 9
forExpr (51)
    à gauche: 28, à droite: 10
breakExpr (52)
    à gauche: 29, à droite: 11
arguments (53)
    à gauche: 30 31, à droite: 15
nonemptyarguments (54)
    à gauche: 32 33, à droite: 31 33


État 0

    0 $accept: . program "end of file"

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    program     aller à l'état 8
    expr        aller à l'état 9
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 1

   16 negExpr: "-" . expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 20
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 2

   27 whileExpr: "while" . expr "do" expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 21
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 3

   28 forExpr: "for" . "id" ":=" expr "to" expr "do" expr

    "id"  décalage et aller à l'état 22


État 4

   29 breakExpr: "break" .

    $défaut  réduction par utilisation de la règle 29 (breakExpr)


État 5

   13 var: "id" .
   15 callExpr: "id" . "(" arguments ")"
   26 assignExpr: "id" . ":=" expr

    "("   décalage et aller à l'état 23
    ":="  décalage et aller à l'état 24

    $défaut  réduction par utilisation de la règle 13 (var)


État 6

   12 stringExpr: "string" .

    $défaut  réduction par utilisation de la règle 12 (stringExpr)


État 7

   14 intExpr: "int" .

    $défaut  réduction par utilisation de la règle 14 (intExpr)


État 8

    0 $accept: program . "end of file"

    "end of file"  décalage et aller à l'état 25


État 9

    1 program: expr .
   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr

    "*"   décalage et aller à l'état 26
    "/"   décalage et aller à l'état 27
    "="   décalage et aller à l'état 28
    "<>"  décalage et aller à l'état 29
    "<"   décalage et aller à l'état 30
    "<="  décalage et aller à l'état 31
    ">"   décalage et aller à l'état 32
    ">="  décalage et aller à l'état 33
    "&"   décalage et aller à l'état 34

    $défaut  réduction par utilisation de la règle 1 (program)


État 10

    2 expr: stringExpr .

    $défaut  réduction par utilisation de la règle 2 (expr)


État 11

    4 expr: var .

    $défaut  réduction par utilisation de la règle 4 (expr)


État 12

    3 expr: intExpr .

    $défaut  réduction par utilisation de la règle 3 (expr)


État 13

    5 expr: callExpr .

    $défaut  réduction par utilisation de la règle 5 (expr)


État 14

    7 expr: negExpr .

    $défaut  réduction par utilisation de la règle 7 (expr)


État 15

    6 expr: opExpr .

    $défaut  réduction par utilisation de la règle 6 (expr)


État 16

    8 expr: assignExpr .

    $défaut  réduction par utilisation de la règle 8 (expr)


État 17

    9 expr: whileExpr .

    $défaut  réduction par utilisation de la règle 9 (expr)


État 18

   10 expr: forExpr .

    $défaut  réduction par utilisation de la règle 10 (expr)


État 19

   11 expr: breakExpr .

    $défaut  réduction par utilisation de la règle 11 (expr)


État 20

   16 negExpr: "-" expr .
   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr

    "*"  décalage et aller à l'état 26
    "/"  décalage et aller à l'état 27

    "*"       [réduction par utilisation de la règle 16 (negExpr)]
    "/"       [réduction par utilisation de la règle 16 (negExpr)]
    $défaut  réduction par utilisation de la règle 16 (negExpr)


État 21

   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr
   27 whileExpr: "while" expr . "do" expr

    "*"   décalage et aller à l'état 26
    "/"   décalage et aller à l'état 27
    "="   décalage et aller à l'état 28
    "<>"  décalage et aller à l'état 29
    "<"   décalage et aller à l'état 30
    "<="  décalage et aller à l'état 31
    ">"   décalage et aller à l'état 32
    ">="  décalage et aller à l'état 33
    "&"   décalage et aller à l'état 34
    "do"  décalage et aller à l'état 35


État 22

   28 forExpr: "for" "id" . ":=" expr "to" expr "do" expr

    ":="  décalage et aller à l'état 36


État 23

   15 callExpr: "id" "(" . arguments ")"

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    $défaut  réduction par utilisation de la règle 30 (arguments)

    expr               aller à l'état 37
    stringExpr         aller à l'état 10
    var                aller à l'état 11
    intExpr            aller à l'état 12
    callExpr           aller à l'état 13
    negExpr            aller à l'état 14
    opExpr             aller à l'état 15
    assignExpr         aller à l'état 16
    whileExpr          aller à l'état 17
    forExpr            aller à l'état 18
    breakExpr          aller à l'état 19
    arguments          aller à l'état 38
    nonemptyarguments  aller à l'état 39


État 24

   26 assignExpr: "id" ":=" . expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 40
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 25

    0 $accept: program "end of file" .

    $défaut  accepter


État 26

   17 opExpr: expr "*" . expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 41
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 27

   18 opExpr: expr "/" . expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 42
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 28

   19 opExpr: expr "=" . expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 43
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 29

   20 opExpr: expr "<>" . expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 44
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 30

   21 opExpr: expr "<" . expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 45
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 31

   23 opExpr: expr "<=" . expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 46
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 32

   22 opExpr: expr ">" . expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 47
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 33

   24 opExpr: expr ">=" . expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 48
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 34

   25 opExpr: expr "&" . expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 49
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 35

   27 whileExpr: "while" expr "do" . expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 50
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 36

   28 forExpr: "for" "id" ":=" . expr "to" expr "do" expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 51
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 37

   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr
   32 nonemptyarguments: expr .

    "*"   décalage et aller à l'état 26
    "/"   décalage et aller à l'état 27
    "="   décalage et aller à l'état 28
    "<>"  décalage et aller à l'état 29
    "<"   décalage et aller à l'état 30
    "<="  décalage et aller à l'état 31
    ">"   décalage et aller à l'état 32
    ">="  décalage et aller à l'état 33
    "&"   décalage et aller à l'état 34

    $défaut  réduction par utilisation de la règle 32 (nonemptyarguments)


État 38

   15 callExpr: "id" "(" arguments . ")"

    ")"  décalage et aller à l'état 52


État 39

   31 arguments: nonemptyarguments .
   33 nonemptyarguments: nonemptyarguments . "," expr

    ","  décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 31 (arguments)


État 40

   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr
   26 assignExpr: "id" ":=" expr .

    "*"   décalage et aller à l'état 26
    "/"   décalage et aller à l'état 27
    "="   décalage et aller à l'état 28
    "<>"  décalage et aller à l'état 29
    "<"   décalage et aller à l'état 30
    "<="  décalage et aller à l'état 31
    ">"   décalage et aller à l'état 32
    ">="  décalage et aller à l'état 33
    "&"   décalage et aller à l'état 34

    "*"       [réduction par utilisation de la règle 26 (assignExpr)]
    "/"       [réduction par utilisation de la règle 26 (assignExpr)]
    $défaut  réduction par utilisation de la règle 26 (assignExpr)


État 41

   17 opExpr: expr . "*" expr
   17       | expr "*" expr .
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr

    "*"   décalage et aller à l'état 26
    "/"   décalage et aller à l'état 27
    "="   décalage et aller à l'état 28
    "<>"  décalage et aller à l'état 29
    "<"   décalage et aller à l'état 30
    "<="  décalage et aller à l'état 31
    ">"   décalage et aller à l'état 32
    ">="  décalage et aller à l'état 33
    "&"   décalage et aller à l'état 34

    "*"       [réduction par utilisation de la règle 17 (opExpr)]
    "/"       [réduction par utilisation de la règle 17 (opExpr)]
    "="       [réduction par utilisation de la règle 17 (opExpr)]
    "<>"      [réduction par utilisation de la règle 17 (opExpr)]
    "<"       [réduction par utilisation de la règle 17 (opExpr)]
    "<="      [réduction par utilisation de la règle 17 (opExpr)]
    ">"       [réduction par utilisation de la règle 17 (opExpr)]
    ">="      [réduction par utilisation de la règle 17 (opExpr)]
    "&"       [réduction par utilisation de la règle 17 (opExpr)]
    $défaut  réduction par utilisation de la règle 17 (opExpr)


État 42

   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   18       | expr "/" expr .
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr

    "*"   décalage et aller à l'état 26
    "/"   décalage et aller à l'état 27
    "="   décalage et aller à l'état 28
    "<>"  décalage et aller à l'état 29
    "<"   décalage et aller à l'état 30
    "<="  décalage et aller à l'état 31
    ">"   décalage et aller à l'état 32
    ">="  décalage et aller à l'état 33
    "&"   décalage et aller à l'état 34

    "*"       [réduction par utilisation de la règle 18 (opExpr)]
    "/"       [réduction par utilisation de la règle 18 (opExpr)]
    "="       [réduction par utilisation de la règle 18 (opExpr)]
    "<>"      [réduction par utilisation de la règle 18 (opExpr)]
    "<"       [réduction par utilisation de la règle 18 (opExpr)]
    "<="      [réduction par utilisation de la règle 18 (opExpr)]
    ">"       [réduction par utilisation de la règle 18 (opExpr)]
    ">="      [réduction par utilisation de la règle 18 (opExpr)]
    "&"       [réduction par utilisation de la règle 18 (opExpr)]
    $défaut  réduction par utilisation de la règle 18 (opExpr)


État 43

   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   19       | expr "=" expr .
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr

    "*"  décalage et aller à l'état 26
    "/"  décalage et aller à l'état 27

    "="   erreur (non-associative)
    "<>"  erreur (non-associative)
    "<"   erreur (non-associative)
    "<="  erreur (non-associative)
    ">"   erreur (non-associative)
    ">="  erreur (non-associative)

    "*"       [réduction par utilisation de la règle 19 (opExpr)]
    "/"       [réduction par utilisation de la règle 19 (opExpr)]
    $défaut  réduction par utilisation de la règle 19 (opExpr)


État 44

   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   20       | expr "<>" expr .
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr

    "*"  décalage et aller à l'état 26
    "/"  décalage et aller à l'état 27

    "="   erreur (non-associative)
    "<>"  erreur (non-associative)
    "<"   erreur (non-associative)
    "<="  erreur (non-associative)
    ">"   erreur (non-associative)
    ">="  erreur (non-associative)

    "*"       [réduction par utilisation de la règle 20 (opExpr)]
    "/"       [réduction par utilisation de la règle 20 (opExpr)]
    $défaut  réduction par utilisation de la règle 20 (opExpr)


État 45

   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   21       | expr "<" expr .
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr

    "*"  décalage et aller à l'état 26
    "/"  décalage et aller à l'état 27

    "="   erreur (non-associative)
    "<>"  erreur (non-associative)
    "<"   erreur (non-associative)
    "<="  erreur (non-associative)
    ">"   erreur (non-associative)
    ">="  erreur (non-associative)

    "*"       [réduction par utilisation de la règle 21 (opExpr)]
    "/"       [réduction par utilisation de la règle 21 (opExpr)]
    $défaut  réduction par utilisation de la règle 21 (opExpr)


État 46

   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   23       | expr "<=" expr .
   24       | expr . ">=" expr
   25       | expr . "&" expr

    "*"  décalage et aller à l'état 26
    "/"  décalage et aller à l'état 27

    "="   erreur (non-associative)
    "<>"  erreur (non-associative)
    "<"   erreur (non-associative)
    "<="  erreur (non-associative)
    ">"   erreur (non-associative)
    ">="  erreur (non-associative)

    "*"       [réduction par utilisation de la règle 23 (opExpr)]
    "/"       [réduction par utilisation de la règle 23 (opExpr)]
    $défaut  réduction par utilisation de la règle 23 (opExpr)


État 47

   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   22       | expr ">" expr .
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr

    "*"  décalage et aller à l'état 26
    "/"  décalage et aller à l'état 27

    "="   erreur (non-associative)
    "<>"  erreur (non-associative)
    "<"   erreur (non-associative)
    "<="  erreur (non-associative)
    ">"   erreur (non-associative)
    ">="  erreur (non-associative)

    "*"       [réduction par utilisation de la règle 22 (opExpr)]
    "/"       [réduction par utilisation de la règle 22 (opExpr)]
    $défaut  réduction par utilisation de la règle 22 (opExpr)


État 48

   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   24       | expr ">=" expr .
   25       | expr . "&" expr

    "*"  décalage et aller à l'état 26
    "/"  décalage et aller à l'état 27

    "="   erreur (non-associative)
    "<>"  erreur (non-associative)
    "<"   erreur (non-associative)
    "<="  erreur (non-associative)
    ">"   erreur (non-associative)
    ">="  erreur (non-associative)

    "*"       [réduction par utilisation de la règle 24 (opExpr)]
    "/"       [réduction par utilisation de la règle 24 (opExpr)]
    $défaut  réduction par utilisation de la règle 24 (opExpr)


État 49

   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr
   25       | expr "&" expr .

    "*"   décalage et aller à l'état 26
    "/"   décalage et aller à l'état 27
    "="   décalage et aller à l'état 28
    "<>"  décalage et aller à l'état 29
    "<"   décalage et aller à l'état 30
    "<="  décalage et aller à l'état 31
    ">"   décalage et aller à l'état 32
    ">="  décalage et aller à l'état 33

    "*"       [réduction par utilisation de la règle 25 (opExpr)]
    "/"       [réduction par utilisation de la règle 25 (opExpr)]
    $défaut  réduction par utilisation de la règle 25 (opExpr)


État 50

   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr
   27 whileExpr: "while" expr "do" expr .

    "*"   décalage et aller à l'état 26
    "/"   décalage et aller à l'état 27
    "="   décalage et aller à l'état 28
    "<>"  décalage et aller à l'état 29
    "<"   décalage et aller à l'état 30
    "<="  décalage et aller à l'état 31
    ">"   décalage et aller à l'état 32
    ">="  décalage et aller à l'état 33
    "&"   décalage et aller à l'état 34

    "*"       [réduction par utilisation de la règle 27 (whileExpr)]
    "/"       [réduction par utilisation de la règle 27 (whileExpr)]
    $défaut  réduction par utilisation de la règle 27 (whileExpr)


État 51

   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr
   28 forExpr: "for" "id" ":=" expr . "to" expr "do" expr

    "*"   décalage et aller à l'état 26
    "/"   décalage et aller à l'état 27
    "="   décalage et aller à l'état 28
    "<>"  décalage et aller à l'état 29
    "<"   décalage et aller à l'état 30
    "<="  décalage et aller à l'état 31
    ">"   décalage et aller à l'état 32
    ">="  décalage et aller à l'état 33
    "&"   décalage et aller à l'état 34
    "to"  décalage et aller à l'état 54


État 52

   15 callExpr: "id" "(" arguments ")" .

    $défaut  réduction par utilisation de la règle 15 (callExpr)


État 53

   33 nonemptyarguments: nonemptyarguments "," . expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 55
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 54

   28 forExpr: "for" "id" ":=" expr "to" . expr "do" expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 56
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 55

   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr
   33 nonemptyarguments: nonemptyarguments "," expr .

    "*"   décalage et aller à l'état 26
    "/"   décalage et aller à l'état 27
    "="   décalage et aller à l'état 28
    "<>"  décalage et aller à l'état 29
    "<"   décalage et aller à l'état 30
    "<="  décalage et aller à l'état 31
    ">"   décalage et aller à l'état 32
    ">="  décalage et aller à l'état 33
    "&"   décalage et aller à l'état 34

    $défaut  réduction par utilisation de la règle 33 (nonemptyarguments)


État 56

   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr
   28 forExpr: "for" "id" ":=" expr "to" expr . "do" expr

    "*"   décalage et aller à l'état 26
    "/"   décalage et aller à l'état 27
    "="   décalage et aller à l'état 28
    "<>"  décalage et aller à l'état 29
    "<"   décalage et aller à l'état 30
    "<="  décalage et aller à l'état 31
    ">"   décalage et aller à l'état 32
    ">="  décalage et aller à l'état 33
    "&"   décalage et aller à l'état 34
    "do"  décalage et aller à l'état 57


État 57

   28 forExpr: "for" "id" ":=" expr "to" expr "do" . expr

    "-"       décalage et aller à l'état 1
    "while"   décalage et aller à l'état 2
    "for"     décalage et aller à l'état 3
    "break"   décalage et aller à l'état 4
    "id"      décalage et aller à l'état 5
    "string"  décalage et aller à l'état 6
    "int"     décalage et aller à l'état 7

    expr        aller à l'état 58
    stringExpr  aller à l'état 10
    var         aller à l'état 11
    intExpr     aller à l'état 12
    callExpr    aller à l'état 13
    negExpr     aller à l'état 14
    opExpr      aller à l'état 15
    assignExpr  aller à l'état 16
    whileExpr   aller à l'état 17
    forExpr     aller à l'état 18
    breakExpr   aller à l'état 19


État 58

   17 opExpr: expr . "*" expr
   18       | expr . "/" expr
   19       | expr . "=" expr
   20       | expr . "<>" expr
   21       | expr . "<" expr
   22       | expr . ">" expr
   23       | expr . "<=" expr
   24       | expr . ">=" expr
   25       | expr . "&" expr
   28 forExpr: "for" "id" ":=" expr "to" expr "do" expr .

    "*"   décalage et aller à l'état 26
    "/"   décalage et aller à l'état 27
    "="   décalage et aller à l'état 28
    "<>"  décalage et aller à l'état 29
    "<"   décalage et aller à l'état 30
    "<="  décalage et aller à l'état 31
    ">"   décalage et aller à l'état 32
    ">="  décalage et aller à l'état 33
    "&"   décalage et aller à l'état 34

    "*"       [réduction par utilisation de la règle 28 (forExpr)]
    "/"       [réduction par utilisation de la règle 28 (forExpr)]
    $défaut  réduction par utilisation de la règle 28 (forExpr)
