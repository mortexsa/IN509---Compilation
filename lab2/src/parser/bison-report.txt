Nonterminals useless in grammar

   decl
   varDecl
   funcDecl
   params
   nonemptyparams
   decls
   param
   typeannotation
   ifExpr


Terminals unused in grammar

   ":"
   ";"
   "{"
   "}"
   "+"
   "|"
   "let"
   "in"
   "end"
   "function"
   "var"
   TYPE
   THEN
   OF


Rules useless in grammar

   32 decl: varDecl
   33     | funcDecl

   34 varDecl: "var" "id" typeannotation ":=" expr

   35 funcDecl: "function" "id" "(" params ")" typeannotation "=" expr

   36 params: %empty
   37       | nonemptyparams

   38 nonemptyparams: param
   39               | nonemptyparams "," param

   40 decls: %empty
   41      | decls decl

   42 param: "id" ":" "id"

   43 typeannotation: %empty
   44               | ":" "id"


State 18 conflicts: 2 shift/reduce
State 38 conflicts: 2 shift/reduce
State 39 conflicts: 9 shift/reduce
State 40 conflicts: 9 shift/reduce
State 41 conflicts: 2 shift/reduce
State 42 conflicts: 2 shift/reduce
State 43 conflicts: 2 shift/reduce
State 44 conflicts: 2 shift/reduce
State 45 conflicts: 2 shift/reduce
State 46 conflicts: 2 shift/reduce
State 47 conflicts: 2 shift/reduce
State 48 conflicts: 2 shift/reduce
State 56 conflicts: 2 shift/reduce


Grammar

    0 $accept: program "end of file"

    1 program: expr

    2 expr: stringExpr
    3     | var
    4     | callExpr
    5     | opExpr
    6     | negExpr
    7     | assignExpr
    8     | whileExpr
    9     | forExpr
   10     | breakExpr

   11 stringExpr: "string"

   12 var: "id"

   13 callExpr: "id" "(" arguments ")"

   14 negExpr: "-" expr

   15 opExpr: expr "*" expr
   16       | expr "/" expr
   17       | expr "=" expr
   18       | expr "<>" expr
   19       | expr "<" expr
   20       | expr ">" expr
   21       | expr "<=" expr
   22       | expr ">=" expr
   23       | expr "&" expr

   24 assignExpr: "id" ":=" expr

   25 whileExpr: "while" expr "do" expr

   26 forExpr: "for" "id" ":=" expr "to" expr "do" expr

   27 breakExpr: "break"

   28 arguments: %empty
   29          | nonemptyarguments

   30 nonemptyarguments: expr
   31                  | nonemptyarguments "," expr


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"," (258) 31
":" (259)
";" (260)
"(" (261) 13
")" (262) 13
"{" (263)
"}" (264)
"+" (265)
"-" (266) 14
"*" (267) 15
"/" (268) 16
"=" (269) 17
"<>" (270) 18
"<" (271) 19
"<=" (272) 21
">" (273) 20
">=" (274) 22
"&" (275) 23
"|" (276)
":=" (277) 24 26
"while" (278) 25
"for" (279) 26
"to" (280) 26
"do" (281) 25 26
"let" (282)
"in" (283)
"end" (284)
"break" (285) 27
"function" (286)
"var" (287)
"uminus" (288)
"id" (289) 12 13 24 26
"string" (290) 11
TYPE (291)
THEN (292)
OF (293)


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1, on right: 0
expr (41)
    on left: 2 3 4 5 6 7 8 9 10, on right: 1 14 15 16 17 18 19 20 21
    22 23 24 25 26 30 31
stringExpr (42)
    on left: 11, on right: 2
var (43)
    on left: 12, on right: 3
callExpr (44)
    on left: 13, on right: 4
negExpr (45)
    on left: 14, on right: 6
opExpr (46)
    on left: 15 16 17 18 19 20 21 22 23, on right: 5
assignExpr (47)
    on left: 24, on right: 7
whileExpr (48)
    on left: 25, on right: 8
forExpr (49)
    on left: 26, on right: 9
breakExpr (50)
    on left: 27, on right: 10
arguments (51)
    on left: 28 29, on right: 13
nonemptyarguments (52)
    on left: 30 31, on right: 29 31


State 0

    0 $accept: . program "end of file"

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    program     go to state 7
    expr        go to state 8
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 1

   14 negExpr: "-" . expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 18
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 2

   25 whileExpr: "while" . expr "do" expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 19
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 3

   26 forExpr: "for" . "id" ":=" expr "to" expr "do" expr

    "id"  shift, and go to state 20


State 4

   27 breakExpr: "break" .

    $default  reduce using rule 27 (breakExpr)


State 5

   12 var: "id" .
   13 callExpr: "id" . "(" arguments ")"
   24 assignExpr: "id" . ":=" expr

    "("   shift, and go to state 21
    ":="  shift, and go to state 22

    $default  reduce using rule 12 (var)


State 6

   11 stringExpr: "string" .

    $default  reduce using rule 11 (stringExpr)


State 7

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 23


State 8

    1 program: expr .
   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr

    "*"   shift, and go to state 24
    "/"   shift, and go to state 25
    "="   shift, and go to state 26
    "<>"  shift, and go to state 27
    "<"   shift, and go to state 28
    "<="  shift, and go to state 29
    ">"   shift, and go to state 30
    ">="  shift, and go to state 31
    "&"   shift, and go to state 32

    $default  reduce using rule 1 (program)


State 9

    2 expr: stringExpr .

    $default  reduce using rule 2 (expr)


State 10

    3 expr: var .

    $default  reduce using rule 3 (expr)


State 11

    4 expr: callExpr .

    $default  reduce using rule 4 (expr)


State 12

    6 expr: negExpr .

    $default  reduce using rule 6 (expr)


State 13

    5 expr: opExpr .

    $default  reduce using rule 5 (expr)


State 14

    7 expr: assignExpr .

    $default  reduce using rule 7 (expr)


State 15

    8 expr: whileExpr .

    $default  reduce using rule 8 (expr)


State 16

    9 expr: forExpr .

    $default  reduce using rule 9 (expr)


State 17

   10 expr: breakExpr .

    $default  reduce using rule 10 (expr)


State 18

   14 negExpr: "-" expr .
   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr

    "*"  shift, and go to state 24
    "/"  shift, and go to state 25

    "*"       [reduce using rule 14 (negExpr)]
    "/"       [reduce using rule 14 (negExpr)]
    $default  reduce using rule 14 (negExpr)


State 19

   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr
   25 whileExpr: "while" expr . "do" expr

    "*"   shift, and go to state 24
    "/"   shift, and go to state 25
    "="   shift, and go to state 26
    "<>"  shift, and go to state 27
    "<"   shift, and go to state 28
    "<="  shift, and go to state 29
    ">"   shift, and go to state 30
    ">="  shift, and go to state 31
    "&"   shift, and go to state 32
    "do"  shift, and go to state 33


State 20

   26 forExpr: "for" "id" . ":=" expr "to" expr "do" expr

    ":="  shift, and go to state 34


State 21

   13 callExpr: "id" "(" . arguments ")"

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    $default  reduce using rule 28 (arguments)

    expr               go to state 35
    stringExpr         go to state 9
    var                go to state 10
    callExpr           go to state 11
    negExpr            go to state 12
    opExpr             go to state 13
    assignExpr         go to state 14
    whileExpr          go to state 15
    forExpr            go to state 16
    breakExpr          go to state 17
    arguments          go to state 36
    nonemptyarguments  go to state 37


State 22

   24 assignExpr: "id" ":=" . expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 38
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 23

    0 $accept: program "end of file" .

    $default  accept


State 24

   15 opExpr: expr "*" . expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 39
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 25

   16 opExpr: expr "/" . expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 40
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 26

   17 opExpr: expr "=" . expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 41
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 27

   18 opExpr: expr "<>" . expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 42
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 28

   19 opExpr: expr "<" . expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 43
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 29

   21 opExpr: expr "<=" . expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 44
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 30

   20 opExpr: expr ">" . expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 45
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 31

   22 opExpr: expr ">=" . expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 46
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 32

   23 opExpr: expr "&" . expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 47
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 33

   25 whileExpr: "while" expr "do" . expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 48
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 34

   26 forExpr: "for" "id" ":=" . expr "to" expr "do" expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 49
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 35

   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr
   30 nonemptyarguments: expr .

    "*"   shift, and go to state 24
    "/"   shift, and go to state 25
    "="   shift, and go to state 26
    "<>"  shift, and go to state 27
    "<"   shift, and go to state 28
    "<="  shift, and go to state 29
    ">"   shift, and go to state 30
    ">="  shift, and go to state 31
    "&"   shift, and go to state 32

    $default  reduce using rule 30 (nonemptyarguments)


State 36

   13 callExpr: "id" "(" arguments . ")"

    ")"  shift, and go to state 50


State 37

   29 arguments: nonemptyarguments .
   31 nonemptyarguments: nonemptyarguments . "," expr

    ","  shift, and go to state 51

    $default  reduce using rule 29 (arguments)


State 38

   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr
   24 assignExpr: "id" ":=" expr .

    "*"   shift, and go to state 24
    "/"   shift, and go to state 25
    "="   shift, and go to state 26
    "<>"  shift, and go to state 27
    "<"   shift, and go to state 28
    "<="  shift, and go to state 29
    ">"   shift, and go to state 30
    ">="  shift, and go to state 31
    "&"   shift, and go to state 32

    "*"       [reduce using rule 24 (assignExpr)]
    "/"       [reduce using rule 24 (assignExpr)]
    $default  reduce using rule 24 (assignExpr)


State 39

   15 opExpr: expr . "*" expr
   15       | expr "*" expr .
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr

    "*"   shift, and go to state 24
    "/"   shift, and go to state 25
    "="   shift, and go to state 26
    "<>"  shift, and go to state 27
    "<"   shift, and go to state 28
    "<="  shift, and go to state 29
    ">"   shift, and go to state 30
    ">="  shift, and go to state 31
    "&"   shift, and go to state 32

    "*"       [reduce using rule 15 (opExpr)]
    "/"       [reduce using rule 15 (opExpr)]
    "="       [reduce using rule 15 (opExpr)]
    "<>"      [reduce using rule 15 (opExpr)]
    "<"       [reduce using rule 15 (opExpr)]
    "<="      [reduce using rule 15 (opExpr)]
    ">"       [reduce using rule 15 (opExpr)]
    ">="      [reduce using rule 15 (opExpr)]
    "&"       [reduce using rule 15 (opExpr)]
    $default  reduce using rule 15 (opExpr)


State 40

   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   16       | expr "/" expr .
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr

    "*"   shift, and go to state 24
    "/"   shift, and go to state 25
    "="   shift, and go to state 26
    "<>"  shift, and go to state 27
    "<"   shift, and go to state 28
    "<="  shift, and go to state 29
    ">"   shift, and go to state 30
    ">="  shift, and go to state 31
    "&"   shift, and go to state 32

    "*"       [reduce using rule 16 (opExpr)]
    "/"       [reduce using rule 16 (opExpr)]
    "="       [reduce using rule 16 (opExpr)]
    "<>"      [reduce using rule 16 (opExpr)]
    "<"       [reduce using rule 16 (opExpr)]
    "<="      [reduce using rule 16 (opExpr)]
    ">"       [reduce using rule 16 (opExpr)]
    ">="      [reduce using rule 16 (opExpr)]
    "&"       [reduce using rule 16 (opExpr)]
    $default  reduce using rule 16 (opExpr)


State 41

   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   17       | expr "=" expr .
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr

    "*"  shift, and go to state 24
    "/"  shift, and go to state 25

    "="   error (nonassociative)
    "<>"  error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)

    "*"       [reduce using rule 17 (opExpr)]
    "/"       [reduce using rule 17 (opExpr)]
    $default  reduce using rule 17 (opExpr)


State 42

   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   18       | expr "<>" expr .
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr

    "*"  shift, and go to state 24
    "/"  shift, and go to state 25

    "="   error (nonassociative)
    "<>"  error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)

    "*"       [reduce using rule 18 (opExpr)]
    "/"       [reduce using rule 18 (opExpr)]
    $default  reduce using rule 18 (opExpr)


State 43

   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   19       | expr "<" expr .
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr

    "*"  shift, and go to state 24
    "/"  shift, and go to state 25

    "="   error (nonassociative)
    "<>"  error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)

    "*"       [reduce using rule 19 (opExpr)]
    "/"       [reduce using rule 19 (opExpr)]
    $default  reduce using rule 19 (opExpr)


State 44

   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   21       | expr "<=" expr .
   22       | expr . ">=" expr
   23       | expr . "&" expr

    "*"  shift, and go to state 24
    "/"  shift, and go to state 25

    "="   error (nonassociative)
    "<>"  error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)

    "*"       [reduce using rule 21 (opExpr)]
    "/"       [reduce using rule 21 (opExpr)]
    $default  reduce using rule 21 (opExpr)


State 45

   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   20       | expr ">" expr .
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr

    "*"  shift, and go to state 24
    "/"  shift, and go to state 25

    "="   error (nonassociative)
    "<>"  error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)

    "*"       [reduce using rule 20 (opExpr)]
    "/"       [reduce using rule 20 (opExpr)]
    $default  reduce using rule 20 (opExpr)


State 46

   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   22       | expr ">=" expr .
   23       | expr . "&" expr

    "*"  shift, and go to state 24
    "/"  shift, and go to state 25

    "="   error (nonassociative)
    "<>"  error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)
    ">"   error (nonassociative)
    ">="  error (nonassociative)

    "*"       [reduce using rule 22 (opExpr)]
    "/"       [reduce using rule 22 (opExpr)]
    $default  reduce using rule 22 (opExpr)


State 47

   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr
   23       | expr "&" expr .

    "*"   shift, and go to state 24
    "/"   shift, and go to state 25
    "="   shift, and go to state 26
    "<>"  shift, and go to state 27
    "<"   shift, and go to state 28
    "<="  shift, and go to state 29
    ">"   shift, and go to state 30
    ">="  shift, and go to state 31

    "*"       [reduce using rule 23 (opExpr)]
    "/"       [reduce using rule 23 (opExpr)]
    $default  reduce using rule 23 (opExpr)


State 48

   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr
   25 whileExpr: "while" expr "do" expr .

    "*"   shift, and go to state 24
    "/"   shift, and go to state 25
    "="   shift, and go to state 26
    "<>"  shift, and go to state 27
    "<"   shift, and go to state 28
    "<="  shift, and go to state 29
    ">"   shift, and go to state 30
    ">="  shift, and go to state 31
    "&"   shift, and go to state 32

    "*"       [reduce using rule 25 (whileExpr)]
    "/"       [reduce using rule 25 (whileExpr)]
    $default  reduce using rule 25 (whileExpr)


State 49

   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr
   26 forExpr: "for" "id" ":=" expr . "to" expr "do" expr

    "*"   shift, and go to state 24
    "/"   shift, and go to state 25
    "="   shift, and go to state 26
    "<>"  shift, and go to state 27
    "<"   shift, and go to state 28
    "<="  shift, and go to state 29
    ">"   shift, and go to state 30
    ">="  shift, and go to state 31
    "&"   shift, and go to state 32
    "to"  shift, and go to state 52


State 50

   13 callExpr: "id" "(" arguments ")" .

    $default  reduce using rule 13 (callExpr)


State 51

   31 nonemptyarguments: nonemptyarguments "," . expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 53
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 52

   26 forExpr: "for" "id" ":=" expr "to" . expr "do" expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 54
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 53

   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr
   31 nonemptyarguments: nonemptyarguments "," expr .

    "*"   shift, and go to state 24
    "/"   shift, and go to state 25
    "="   shift, and go to state 26
    "<>"  shift, and go to state 27
    "<"   shift, and go to state 28
    "<="  shift, and go to state 29
    ">"   shift, and go to state 30
    ">="  shift, and go to state 31
    "&"   shift, and go to state 32

    $default  reduce using rule 31 (nonemptyarguments)


State 54

   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr
   26 forExpr: "for" "id" ":=" expr "to" expr . "do" expr

    "*"   shift, and go to state 24
    "/"   shift, and go to state 25
    "="   shift, and go to state 26
    "<>"  shift, and go to state 27
    "<"   shift, and go to state 28
    "<="  shift, and go to state 29
    ">"   shift, and go to state 30
    ">="  shift, and go to state 31
    "&"   shift, and go to state 32
    "do"  shift, and go to state 55


State 55

   26 forExpr: "for" "id" ":=" expr "to" expr "do" . expr

    "-"       shift, and go to state 1
    "while"   shift, and go to state 2
    "for"     shift, and go to state 3
    "break"   shift, and go to state 4
    "id"      shift, and go to state 5
    "string"  shift, and go to state 6

    expr        go to state 56
    stringExpr  go to state 9
    var         go to state 10
    callExpr    go to state 11
    negExpr     go to state 12
    opExpr      go to state 13
    assignExpr  go to state 14
    whileExpr   go to state 15
    forExpr     go to state 16
    breakExpr   go to state 17


State 56

   15 opExpr: expr . "*" expr
   16       | expr . "/" expr
   17       | expr . "=" expr
   18       | expr . "<>" expr
   19       | expr . "<" expr
   20       | expr . ">" expr
   21       | expr . "<=" expr
   22       | expr . ">=" expr
   23       | expr . "&" expr
   26 forExpr: "for" "id" ":=" expr "to" expr "do" expr .

    "*"   shift, and go to state 24
    "/"   shift, and go to state 25
    "="   shift, and go to state 26
    "<>"  shift, and go to state 27
    "<"   shift, and go to state 28
    "<="  shift, and go to state 29
    ">"   shift, and go to state 30
    ">="  shift, and go to state 31
    "&"   shift, and go to state 32

    "*"       [reduce using rule 26 (forExpr)]
    "/"       [reduce using rule 26 (forExpr)]
    $default  reduce using rule 26 (forExpr)
