Terminaux inutilisés dans la grammaire

   "{"
   "}"
   TYPE
   OF
   DEVIDE


État 29 conflits: 1 décalage/réduction
État 63 conflits: 1 décalage/réduction
État 64 conflits: 1 décalage/réduction
État 65 conflits: 1 décalage/réduction
État 66 conflits: 1 décalage/réduction
État 67 conflits: 12 décalage/réduction
État 68 conflits: 1 décalage/réduction
État 69 conflits: 1 décalage/réduction
État 70 conflits: 1 décalage/réduction
État 71 conflits: 1 décalage/réduction
État 72 conflits: 1 décalage/réduction
État 73 conflits: 1 décalage/réduction
État 74 conflits: 1 décalage/réduction
État 75 conflits: 1 décalage/réduction
État 77 conflits: 1 décalage/réduction
État 82 conflits: 2 décalage/réduction
État 99 conflits: 12 décalage/réduction
État 105 conflits: 1 décalage/réduction


Grammaire

    0 $accept: program "end of file"

    1 program: expr

    2 decl: varDecl
    3     | funcDecl

    4 expr: stringExpr
    5     | intExpr
    6     | var
    7     | callExpr
    8     | opExpr
    9     | negExpr
   10     | assignExpr
   11     | whileExpr
   12     | forExpr
   13     | ifExpr
   14     | letInEndExpr
   15     | parentheseExpr
   16     | breakExpr

   17 varDecl: "var" "id" typeannotation ":=" expr

   18 funcDecl: "function" "id" "(" params ")" typeannotation "=" expr

   19 stringExpr: "string"

   20 var: "id"

   21 intExpr: "int"

   22 callExpr: "id" "(" arguments ")"

   23 negExpr: "-" expr

   24 opExpr: expr "*" expr
   25       | expr "/" expr
   26       | expr "+" expr
   27       | expr "-" expr
   28       | expr "=" expr
   29       | expr "<>" expr
   30       | expr "<" expr
   31       | expr ">" expr
   32       | expr "<=" expr
   33       | expr ">=" expr
   34       | expr "&" expr
   35       | expr "|" expr

   36 assignExpr: "id" ":=" expr

   37 whileExpr: "while" expr "do" expr

   38 forExpr: "for" "id" ":=" expr "to" expr "do" expr

   39 ifExpr: "if" expr "then" expr "else" expr
   40       | "if" expr "then" expr

   41 letInEndExpr: "let" decls "in" sequences "end"

   42 parentheseExpr: "(" sequences ")"

   43 breakExpr: "break"

   44 arguments: %empty
   45          | nonemptyarguments

   46 nonemptyarguments: expr
   47                  | nonemptyarguments "," expr

   48 params: %empty
   49       | nonemptyparams

   50 nonemptyparams: param
   51               | nonemptyparams "," param

   52 decls: %empty
   53      | decls decl

   54 nonemptysequences: expr
   55                  | nonemptysequences ";" expr

   56 sequences: %empty
   57          | nonemptysequences

   58 param: "id" ":" "id"

   59 typeannotation: %empty
   60               | ":" "id"


Terminaux, suivis des règles où ils apparaissent

"end of file" (0) 0
error (256)
"," (258) 47 51
":" (259) 58 60
";" (260) 55
"(" (261) 18 22 42
")" (262) 18 22 42
"{" (263)
"}" (264)
"+" (265) 26
"-" (266) 23 27
"*" (267) 24
"/" (268) 25
"=" (269) 18 28
"<>" (270) 29
"<" (271) 30
"<=" (272) 32
">" (273) 31
">=" (274) 33
"&" (275) 34
"|" (276) 35
":=" (277) 17 36 38
"while" (278) 37
"for" (279) 38
"to" (280) 38
"do" (281) 37 38
"let" (282) 41
"in" (283) 41
"end" (284) 41
"break" (285) 43
"function" (286) 18
"var" (287) 17
"uminus" (288)
"if" (289) 39 40
"then" (290) 39 40
"else" (291) 39
"id" (292) 17 18 20 22 36 38 58 60
"string" (293) 19
"int" (294) 21
TYPE (295)
OF (296)
DEVIDE (297)


Non-terminaux, suivis des règles où ils apparaissent

$accept (43)
    à gauche: 0
program (44)
    à gauche: 1, à droite: 0
decl (45)
    à gauche: 2 3, à droite: 53
expr (46)
    à gauche: 4 5 6 7 8 9 10 11 12 13 14 15 16, à droite: 1 17 18
    23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 46 47 54
    55
varDecl (47)
    à gauche: 17, à droite: 2
funcDecl (48)
    à gauche: 18, à droite: 3
stringExpr (49)
    à gauche: 19, à droite: 4
var (50)
    à gauche: 20, à droite: 6
intExpr (51)
    à gauche: 21, à droite: 5
callExpr (52)
    à gauche: 22, à droite: 7
negExpr (53)
    à gauche: 23, à droite: 9
opExpr (54)
    à gauche: 24 25 26 27 28 29 30 31 32 33 34 35, à droite: 8
assignExpr (55)
    à gauche: 36, à droite: 10
whileExpr (56)
    à gauche: 37, à droite: 11
forExpr (57)
    à gauche: 38, à droite: 12
ifExpr (58)
    à gauche: 39 40, à droite: 13
letInEndExpr (59)
    à gauche: 41, à droite: 14
parentheseExpr (60)
    à gauche: 42, à droite: 15
breakExpr (61)
    à gauche: 43, à droite: 16
arguments (62)
    à gauche: 44 45, à droite: 22
nonemptyarguments (63)
    à gauche: 46 47, à droite: 45 47
params (64)
    à gauche: 48 49, à droite: 18
nonemptyparams (65)
    à gauche: 50 51, à droite: 49 51
decls (66)
    à gauche: 52 53, à droite: 41 53
nonemptysequences (67)
    à gauche: 54 55, à droite: 55 57
sequences (68)
    à gauche: 56 57, à droite: 41 42
param (69)
    à gauche: 58, à droite: 50 51
typeannotation (70)
    à gauche: 59 60, à droite: 17 18


État 0

    0 $accept: . program "end of file"

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    program         aller à l'état 11
    expr            aller à l'état 12
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 1

   42 parentheseExpr: "(" . sequences ")"

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    $défaut  réduction par utilisation de la règle 56 (sequences)

    expr               aller à l'état 26
    stringExpr         aller à l'état 13
    var                aller à l'état 14
    intExpr            aller à l'état 15
    callExpr           aller à l'état 16
    negExpr            aller à l'état 17
    opExpr             aller à l'état 18
    assignExpr         aller à l'état 19
    whileExpr          aller à l'état 20
    forExpr            aller à l'état 21
    ifExpr             aller à l'état 22
    letInEndExpr       aller à l'état 23
    parentheseExpr     aller à l'état 24
    breakExpr          aller à l'état 25
    nonemptysequences  aller à l'état 27
    sequences          aller à l'état 28


État 2

   23 negExpr: "-" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 29
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 3

   37 whileExpr: "while" . expr "do" expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 30
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 4

   38 forExpr: "for" . "id" ":=" expr "to" expr "do" expr

    "id"  décalage et aller à l'état 31


État 5

   41 letInEndExpr: "let" . decls "in" sequences "end"

    $défaut  réduction par utilisation de la règle 52 (decls)

    decls  aller à l'état 32


État 6

   43 breakExpr: "break" .

    $défaut  réduction par utilisation de la règle 43 (breakExpr)


État 7

   39 ifExpr: "if" . expr "then" expr "else" expr
   40       | "if" . expr "then" expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 33
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 8

   20 var: "id" .
   22 callExpr: "id" . "(" arguments ")"
   36 assignExpr: "id" . ":=" expr

    "("   décalage et aller à l'état 34
    ":="  décalage et aller à l'état 35

    $défaut  réduction par utilisation de la règle 20 (var)


État 9

   19 stringExpr: "string" .

    $défaut  réduction par utilisation de la règle 19 (stringExpr)


État 10

   21 intExpr: "int" .

    $défaut  réduction par utilisation de la règle 21 (intExpr)


État 11

    0 $accept: program . "end of file"

    "end of file"  décalage et aller à l'état 36


État 12

    1 program: expr .
   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46
    "&"   décalage et aller à l'état 47
    "|"   décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 1 (program)


État 13

    4 expr: stringExpr .

    $défaut  réduction par utilisation de la règle 4 (expr)


État 14

    6 expr: var .

    $défaut  réduction par utilisation de la règle 6 (expr)


État 15

    5 expr: intExpr .

    $défaut  réduction par utilisation de la règle 5 (expr)


État 16

    7 expr: callExpr .

    $défaut  réduction par utilisation de la règle 7 (expr)


État 17

    9 expr: negExpr .

    $défaut  réduction par utilisation de la règle 9 (expr)


État 18

    8 expr: opExpr .

    $défaut  réduction par utilisation de la règle 8 (expr)


État 19

   10 expr: assignExpr .

    $défaut  réduction par utilisation de la règle 10 (expr)


État 20

   11 expr: whileExpr .

    $défaut  réduction par utilisation de la règle 11 (expr)


État 21

   12 expr: forExpr .

    $défaut  réduction par utilisation de la règle 12 (expr)


État 22

   13 expr: ifExpr .

    $défaut  réduction par utilisation de la règle 13 (expr)


État 23

   14 expr: letInEndExpr .

    $défaut  réduction par utilisation de la règle 14 (expr)


État 24

   15 expr: parentheseExpr .

    $défaut  réduction par utilisation de la règle 15 (expr)


État 25

   16 expr: breakExpr .

    $défaut  réduction par utilisation de la règle 16 (expr)


État 26

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr
   54 nonemptysequences: expr .

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46
    "&"   décalage et aller à l'état 47
    "|"   décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 54 (nonemptysequences)


État 27

   55 nonemptysequences: nonemptysequences . ";" expr
   57 sequences: nonemptysequences .

    ";"  décalage et aller à l'état 49

    $défaut  réduction par utilisation de la règle 57 (sequences)


État 28

   42 parentheseExpr: "(" sequences . ")"

    ")"  décalage et aller à l'état 50


État 29

   23 negExpr: "-" expr .
   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr

    "/"  décalage et aller à l'état 40

    "/"       [réduction par utilisation de la règle 23 (negExpr)]
    $défaut  réduction par utilisation de la règle 23 (negExpr)


État 30

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr
   37 whileExpr: "while" expr . "do" expr

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46
    "&"   décalage et aller à l'état 47
    "|"   décalage et aller à l'état 48
    "do"  décalage et aller à l'état 51


État 31

   38 forExpr: "for" "id" . ":=" expr "to" expr "do" expr

    ":="  décalage et aller à l'état 52


État 32

   41 letInEndExpr: "let" decls . "in" sequences "end"
   53 decls: decls . decl

    "in"        décalage et aller à l'état 53
    "function"  décalage et aller à l'état 54
    "var"       décalage et aller à l'état 55

    decl      aller à l'état 56
    varDecl   aller à l'état 57
    funcDecl  aller à l'état 58


État 33

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr
   39 ifExpr: "if" expr . "then" expr "else" expr
   40       | "if" expr . "then" expr

    "+"     décalage et aller à l'état 37
    "-"     décalage et aller à l'état 38
    "*"     décalage et aller à l'état 39
    "/"     décalage et aller à l'état 40
    "="     décalage et aller à l'état 41
    "<>"    décalage et aller à l'état 42
    "<"     décalage et aller à l'état 43
    "<="    décalage et aller à l'état 44
    ">"     décalage et aller à l'état 45
    ">="    décalage et aller à l'état 46
    "&"     décalage et aller à l'état 47
    "|"     décalage et aller à l'état 48
    "then"  décalage et aller à l'état 59


État 34

   22 callExpr: "id" "(" . arguments ")"

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    $défaut  réduction par utilisation de la règle 44 (arguments)

    expr               aller à l'état 60
    stringExpr         aller à l'état 13
    var                aller à l'état 14
    intExpr            aller à l'état 15
    callExpr           aller à l'état 16
    negExpr            aller à l'état 17
    opExpr             aller à l'état 18
    assignExpr         aller à l'état 19
    whileExpr          aller à l'état 20
    forExpr            aller à l'état 21
    ifExpr             aller à l'état 22
    letInEndExpr       aller à l'état 23
    parentheseExpr     aller à l'état 24
    breakExpr          aller à l'état 25
    arguments          aller à l'état 61
    nonemptyarguments  aller à l'état 62


État 35

   36 assignExpr: "id" ":=" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 63
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 36

    0 $accept: program "end of file" .

    $défaut  accepter


État 37

   26 opExpr: expr "+" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 64
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 38

   27 opExpr: expr "-" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 65
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 39

   24 opExpr: expr "*" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 66
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 40

   25 opExpr: expr "/" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 67
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 41

   28 opExpr: expr "=" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 68
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 42

   29 opExpr: expr "<>" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 69
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 43

   30 opExpr: expr "<" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 70
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 44

   32 opExpr: expr "<=" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 71
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 45

   31 opExpr: expr ">" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 72
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 46

   33 opExpr: expr ">=" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 73
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 47

   34 opExpr: expr "&" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 74
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 48

   35 opExpr: expr "|" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 75
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 49

   55 nonemptysequences: nonemptysequences ";" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 76
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 50

   42 parentheseExpr: "(" sequences ")" .

    $défaut  réduction par utilisation de la règle 42 (parentheseExpr)


État 51

   37 whileExpr: "while" expr "do" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 77
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 52

   38 forExpr: "for" "id" ":=" . expr "to" expr "do" expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 78
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 53

   41 letInEndExpr: "let" decls "in" . sequences "end"

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    $défaut  réduction par utilisation de la règle 56 (sequences)

    expr               aller à l'état 26
    stringExpr         aller à l'état 13
    var                aller à l'état 14
    intExpr            aller à l'état 15
    callExpr           aller à l'état 16
    negExpr            aller à l'état 17
    opExpr             aller à l'état 18
    assignExpr         aller à l'état 19
    whileExpr          aller à l'état 20
    forExpr            aller à l'état 21
    ifExpr             aller à l'état 22
    letInEndExpr       aller à l'état 23
    parentheseExpr     aller à l'état 24
    breakExpr          aller à l'état 25
    nonemptysequences  aller à l'état 27
    sequences          aller à l'état 79


État 54

   18 funcDecl: "function" . "id" "(" params ")" typeannotation "=" expr

    "id"  décalage et aller à l'état 80


État 55

   17 varDecl: "var" . "id" typeannotation ":=" expr

    "id"  décalage et aller à l'état 81


État 56

   53 decls: decls decl .

    $défaut  réduction par utilisation de la règle 53 (decls)


État 57

    2 decl: varDecl .

    $défaut  réduction par utilisation de la règle 2 (decl)


État 58

    3 decl: funcDecl .

    $défaut  réduction par utilisation de la règle 3 (decl)


État 59

   39 ifExpr: "if" expr "then" . expr "else" expr
   40       | "if" expr "then" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 82
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 60

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr
   46 nonemptyarguments: expr .

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46
    "&"   décalage et aller à l'état 47
    "|"   décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 46 (nonemptyarguments)


État 61

   22 callExpr: "id" "(" arguments . ")"

    ")"  décalage et aller à l'état 83


État 62

   45 arguments: nonemptyarguments .
   47 nonemptyarguments: nonemptyarguments . "," expr

    ","  décalage et aller à l'état 84

    $défaut  réduction par utilisation de la règle 45 (arguments)


État 63

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr
   36 assignExpr: "id" ":=" expr .

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46
    "&"   décalage et aller à l'état 47
    "|"   décalage et aller à l'état 48

    "/"       [réduction par utilisation de la règle 36 (assignExpr)]
    $défaut  réduction par utilisation de la règle 36 (assignExpr)


État 64

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   26       | expr "+" expr .
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr

    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46

    "/"       [réduction par utilisation de la règle 26 (opExpr)]
    $défaut  réduction par utilisation de la règle 26 (opExpr)


État 65

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   27       | expr "-" expr .
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr

    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46

    "/"       [réduction par utilisation de la règle 27 (opExpr)]
    $défaut  réduction par utilisation de la règle 27 (opExpr)


État 66

   24 opExpr: expr . "*" expr
   24       | expr "*" expr .
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr

    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46

    "/"       [réduction par utilisation de la règle 24 (opExpr)]
    $défaut  réduction par utilisation de la règle 24 (opExpr)


État 67

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   25       | expr "/" expr .
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46
    "&"   décalage et aller à l'état 47
    "|"   décalage et aller à l'état 48

    "+"       [réduction par utilisation de la règle 25 (opExpr)]
    "-"       [réduction par utilisation de la règle 25 (opExpr)]
    "*"       [réduction par utilisation de la règle 25 (opExpr)]
    "/"       [réduction par utilisation de la règle 25 (opExpr)]
    "="       [réduction par utilisation de la règle 25 (opExpr)]
    "<>"      [réduction par utilisation de la règle 25 (opExpr)]
    "<"       [réduction par utilisation de la règle 25 (opExpr)]
    "<="      [réduction par utilisation de la règle 25 (opExpr)]
    ">"       [réduction par utilisation de la règle 25 (opExpr)]
    ">="      [réduction par utilisation de la règle 25 (opExpr)]
    "&"       [réduction par utilisation de la règle 25 (opExpr)]
    "|"       [réduction par utilisation de la règle 25 (opExpr)]
    $défaut  réduction par utilisation de la règle 25 (opExpr)


État 68

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   28       | expr "=" expr .
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr

    "/"  décalage et aller à l'état 40

    "="   erreur (non-associative)
    "<>"  erreur (non-associative)
    "<"   erreur (non-associative)
    "<="  erreur (non-associative)
    ">"   erreur (non-associative)
    ">="  erreur (non-associative)

    "/"       [réduction par utilisation de la règle 28 (opExpr)]
    $défaut  réduction par utilisation de la règle 28 (opExpr)


État 69

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   29       | expr "<>" expr .
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr

    "/"  décalage et aller à l'état 40

    "="   erreur (non-associative)
    "<>"  erreur (non-associative)
    "<"   erreur (non-associative)
    "<="  erreur (non-associative)
    ">"   erreur (non-associative)
    ">="  erreur (non-associative)

    "/"       [réduction par utilisation de la règle 29 (opExpr)]
    $défaut  réduction par utilisation de la règle 29 (opExpr)


État 70

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   30       | expr "<" expr .
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr

    "/"  décalage et aller à l'état 40

    "="   erreur (non-associative)
    "<>"  erreur (non-associative)
    "<"   erreur (non-associative)
    "<="  erreur (non-associative)
    ">"   erreur (non-associative)
    ">="  erreur (non-associative)

    "/"       [réduction par utilisation de la règle 30 (opExpr)]
    $défaut  réduction par utilisation de la règle 30 (opExpr)


État 71

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   32       | expr "<=" expr .
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr

    "/"  décalage et aller à l'état 40

    "="   erreur (non-associative)
    "<>"  erreur (non-associative)
    "<"   erreur (non-associative)
    "<="  erreur (non-associative)
    ">"   erreur (non-associative)
    ">="  erreur (non-associative)

    "/"       [réduction par utilisation de la règle 32 (opExpr)]
    $défaut  réduction par utilisation de la règle 32 (opExpr)


État 72

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   31       | expr ">" expr .
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr

    "/"  décalage et aller à l'état 40

    "="   erreur (non-associative)
    "<>"  erreur (non-associative)
    "<"   erreur (non-associative)
    "<="  erreur (non-associative)
    ">"   erreur (non-associative)
    ">="  erreur (non-associative)

    "/"       [réduction par utilisation de la règle 31 (opExpr)]
    $défaut  réduction par utilisation de la règle 31 (opExpr)


État 73

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   33       | expr ">=" expr .
   34       | expr . "&" expr
   35       | expr . "|" expr

    "/"  décalage et aller à l'état 40

    "="   erreur (non-associative)
    "<>"  erreur (non-associative)
    "<"   erreur (non-associative)
    "<="  erreur (non-associative)
    ">"   erreur (non-associative)
    ">="  erreur (non-associative)

    "/"       [réduction par utilisation de la règle 33 (opExpr)]
    $défaut  réduction par utilisation de la règle 33 (opExpr)


État 74

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   34       | expr "&" expr .
   35       | expr . "|" expr

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46

    "/"       [réduction par utilisation de la règle 34 (opExpr)]
    $défaut  réduction par utilisation de la règle 34 (opExpr)


État 75

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr
   35       | expr "|" expr .

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46
    "&"   décalage et aller à l'état 47

    "/"       [réduction par utilisation de la règle 35 (opExpr)]
    $défaut  réduction par utilisation de la règle 35 (opExpr)


État 76

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr
   55 nonemptysequences: nonemptysequences ";" expr .

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46
    "&"   décalage et aller à l'état 47
    "|"   décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 55 (nonemptysequences)


État 77

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr
   37 whileExpr: "while" expr "do" expr .

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46
    "&"   décalage et aller à l'état 47
    "|"   décalage et aller à l'état 48

    "/"       [réduction par utilisation de la règle 37 (whileExpr)]
    $défaut  réduction par utilisation de la règle 37 (whileExpr)


État 78

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr
   38 forExpr: "for" "id" ":=" expr . "to" expr "do" expr

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46
    "&"   décalage et aller à l'état 47
    "|"   décalage et aller à l'état 48
    "to"  décalage et aller à l'état 85


État 79

   41 letInEndExpr: "let" decls "in" sequences . "end"

    "end"  décalage et aller à l'état 86


État 80

   18 funcDecl: "function" "id" . "(" params ")" typeannotation "=" expr

    "("  décalage et aller à l'état 87


État 81

   17 varDecl: "var" "id" . typeannotation ":=" expr

    ":"  décalage et aller à l'état 88

    $défaut  réduction par utilisation de la règle 59 (typeannotation)

    typeannotation  aller à l'état 89


État 82

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr
   39 ifExpr: "if" expr "then" expr . "else" expr
   40       | "if" expr "then" expr .

    "+"     décalage et aller à l'état 37
    "-"     décalage et aller à l'état 38
    "*"     décalage et aller à l'état 39
    "/"     décalage et aller à l'état 40
    "="     décalage et aller à l'état 41
    "<>"    décalage et aller à l'état 42
    "<"     décalage et aller à l'état 43
    "<="    décalage et aller à l'état 44
    ">"     décalage et aller à l'état 45
    ">="    décalage et aller à l'état 46
    "&"     décalage et aller à l'état 47
    "|"     décalage et aller à l'état 48
    "else"  décalage et aller à l'état 90

    "/"       [réduction par utilisation de la règle 40 (ifExpr)]
    "else"    [réduction par utilisation de la règle 40 (ifExpr)]
    $défaut  réduction par utilisation de la règle 40 (ifExpr)


État 83

   22 callExpr: "id" "(" arguments ")" .

    $défaut  réduction par utilisation de la règle 22 (callExpr)


État 84

   47 nonemptyarguments: nonemptyarguments "," . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 91
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 85

   38 forExpr: "for" "id" ":=" expr "to" . expr "do" expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 92
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 86

   41 letInEndExpr: "let" decls "in" sequences "end" .

    $défaut  réduction par utilisation de la règle 41 (letInEndExpr)


État 87

   18 funcDecl: "function" "id" "(" . params ")" typeannotation "=" expr

    "id"  décalage et aller à l'état 93

    $défaut  réduction par utilisation de la règle 48 (params)

    params          aller à l'état 94
    nonemptyparams  aller à l'état 95
    param           aller à l'état 96


État 88

   60 typeannotation: ":" . "id"

    "id"  décalage et aller à l'état 97


État 89

   17 varDecl: "var" "id" typeannotation . ":=" expr

    ":="  décalage et aller à l'état 98


État 90

   39 ifExpr: "if" expr "then" expr "else" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 99
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 91

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr
   47 nonemptyarguments: nonemptyarguments "," expr .

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46
    "&"   décalage et aller à l'état 47
    "|"   décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 47 (nonemptyarguments)


État 92

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr
   38 forExpr: "for" "id" ":=" expr "to" expr . "do" expr

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46
    "&"   décalage et aller à l'état 47
    "|"   décalage et aller à l'état 48
    "do"  décalage et aller à l'état 100


État 93

   58 param: "id" . ":" "id"

    ":"  décalage et aller à l'état 101


État 94

   18 funcDecl: "function" "id" "(" params . ")" typeannotation "=" expr

    ")"  décalage et aller à l'état 102


État 95

   49 params: nonemptyparams .
   51 nonemptyparams: nonemptyparams . "," param

    ","  décalage et aller à l'état 103

    $défaut  réduction par utilisation de la règle 49 (params)


État 96

   50 nonemptyparams: param .

    $défaut  réduction par utilisation de la règle 50 (nonemptyparams)


État 97

   60 typeannotation: ":" "id" .

    $défaut  réduction par utilisation de la règle 60 (typeannotation)


État 98

   17 varDecl: "var" "id" typeannotation ":=" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 104
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 99

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr
   39 ifExpr: "if" expr "then" expr "else" expr .

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46
    "&"   décalage et aller à l'état 47
    "|"   décalage et aller à l'état 48

    "+"       [réduction par utilisation de la règle 39 (ifExpr)]
    "-"       [réduction par utilisation de la règle 39 (ifExpr)]
    "*"       [réduction par utilisation de la règle 39 (ifExpr)]
    "/"       [réduction par utilisation de la règle 39 (ifExpr)]
    "="       [réduction par utilisation de la règle 39 (ifExpr)]
    "<>"      [réduction par utilisation de la règle 39 (ifExpr)]
    "<"       [réduction par utilisation de la règle 39 (ifExpr)]
    "<="      [réduction par utilisation de la règle 39 (ifExpr)]
    ">"       [réduction par utilisation de la règle 39 (ifExpr)]
    ">="      [réduction par utilisation de la règle 39 (ifExpr)]
    "&"       [réduction par utilisation de la règle 39 (ifExpr)]
    "|"       [réduction par utilisation de la règle 39 (ifExpr)]
    $défaut  réduction par utilisation de la règle 39 (ifExpr)


État 100

   38 forExpr: "for" "id" ":=" expr "to" expr "do" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 105
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 101

   58 param: "id" ":" . "id"

    "id"  décalage et aller à l'état 106


État 102

   18 funcDecl: "function" "id" "(" params ")" . typeannotation "=" expr

    ":"  décalage et aller à l'état 88

    $défaut  réduction par utilisation de la règle 59 (typeannotation)

    typeannotation  aller à l'état 107


État 103

   51 nonemptyparams: nonemptyparams "," . param

    "id"  décalage et aller à l'état 93

    param  aller à l'état 108


État 104

   17 varDecl: "var" "id" typeannotation ":=" expr .
   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46
    "&"   décalage et aller à l'état 47
    "|"   décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 17 (varDecl)


État 105

   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr
   38 forExpr: "for" "id" ":=" expr "to" expr "do" expr .

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46
    "&"   décalage et aller à l'état 47
    "|"   décalage et aller à l'état 48

    "/"       [réduction par utilisation de la règle 38 (forExpr)]
    $défaut  réduction par utilisation de la règle 38 (forExpr)


État 106

   58 param: "id" ":" "id" .

    $défaut  réduction par utilisation de la règle 58 (param)


État 107

   18 funcDecl: "function" "id" "(" params ")" typeannotation . "=" expr

    "="  décalage et aller à l'état 109


État 108

   51 nonemptyparams: nonemptyparams "," param .

    $défaut  réduction par utilisation de la règle 51 (nonemptyparams)


État 109

   18 funcDecl: "function" "id" "(" params ")" typeannotation "=" . expr

    "("       décalage et aller à l'état 1
    "-"       décalage et aller à l'état 2
    "while"   décalage et aller à l'état 3
    "for"     décalage et aller à l'état 4
    "let"     décalage et aller à l'état 5
    "break"   décalage et aller à l'état 6
    "if"      décalage et aller à l'état 7
    "id"      décalage et aller à l'état 8
    "string"  décalage et aller à l'état 9
    "int"     décalage et aller à l'état 10

    expr            aller à l'état 110
    stringExpr      aller à l'état 13
    var             aller à l'état 14
    intExpr         aller à l'état 15
    callExpr        aller à l'état 16
    negExpr         aller à l'état 17
    opExpr          aller à l'état 18
    assignExpr      aller à l'état 19
    whileExpr       aller à l'état 20
    forExpr         aller à l'état 21
    ifExpr          aller à l'état 22
    letInEndExpr    aller à l'état 23
    parentheseExpr  aller à l'état 24
    breakExpr       aller à l'état 25


État 110

   18 funcDecl: "function" "id" "(" params ")" typeannotation "=" expr .
   24 opExpr: expr . "*" expr
   25       | expr . "/" expr
   26       | expr . "+" expr
   27       | expr . "-" expr
   28       | expr . "=" expr
   29       | expr . "<>" expr
   30       | expr . "<" expr
   31       | expr . ">" expr
   32       | expr . "<=" expr
   33       | expr . ">=" expr
   34       | expr . "&" expr
   35       | expr . "|" expr

    "+"   décalage et aller à l'état 37
    "-"   décalage et aller à l'état 38
    "*"   décalage et aller à l'état 39
    "/"   décalage et aller à l'état 40
    "="   décalage et aller à l'état 41
    "<>"  décalage et aller à l'état 42
    "<"   décalage et aller à l'état 43
    "<="  décalage et aller à l'état 44
    ">"   décalage et aller à l'état 45
    ">="  décalage et aller à l'état 46
    "&"   décalage et aller à l'état 47
    "|"   décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 18 (funcDecl)
